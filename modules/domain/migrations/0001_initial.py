# Generated by Django 4.2.5 on 2023-09-30 20:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modules.domain.managers
import mptt.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="last name"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Designates if this user has been verified.",
                        verbose_name="user verified",
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user is customer or not",
                        verbose_name="is customer",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="username"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "samam_user",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", modules.domain.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="BloodType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Blood Type",
                "verbose_name_plural": "Blood Types",
                "db_table": "samam_blood_type",
            },
        ),
        migrations.CreateModel(
            name="CareerField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Career Field",
                "verbose_name_plural": "Career Fields",
                "db_table": "samam_career_field",
            },
        ),
        migrations.CreateModel(
            name="CareerGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Career Group",
                "verbose_name_plural": "Career Groups",
                "db_table": "samam_career_group",
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
                "db_table": "samam_city",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "db_table": "samam_country",
            },
        ),
        migrations.CreateModel(
            name="DegreeCompliance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Degree Compliance",
                "verbose_name_plural": "Degree Compliances",
                "db_table": "samam_degree_compliance",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Designates if this object should be considered active or not or to simulate soft delete behaviour.",
                        verbose_name="active",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "is_private",
                    models.BooleanField(default=False, verbose_name="is private"),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="email")),
                (
                    "land_area",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="land area"
                    ),
                ),
                (
                    "noble_area",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="area of noble"
                    ),
                ),
                (
                    "operation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="operation date"
                    ),
                ),
                (
                    "completion_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="completion date"
                    ),
                ),
                (
                    "completion_certificate",
                    models.ImageField(
                        blank=True, null=True, upload_to="palace/completion_certificate"
                    ),
                ),
                (
                    "phone",
                    models.CharField(max_length=15, verbose_name="department phone"),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
                "db_table": "samam_palace_department",
            },
        ),
        migrations.CreateModel(
            name="ElectronicAnnouncementTitle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Electronic Announcement",
                "verbose_name_plural": "Electronic Announcements",
                "db_table": "samam_electronic_announcement",
            },
        ),
        migrations.CreateModel(
            name="EmploymentState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Employment State",
                "verbose_name_plural": "Employment States",
                "db_table": "samam_employment_state",
            },
        ),
        migrations.CreateModel(
            name="EmploymentStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Employment Status",
                "verbose_name_plural": "Employment Statuses",
                "db_table": "samam_employment_status",
            },
        ),
        migrations.CreateModel(
            name="EmploymentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Employment Type",
                "verbose_name_plural": "Employment Types",
                "db_table": "samam_employment_type",
            },
        ),
        migrations.CreateModel(
            name="FieldOfStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Field of Study",
                "verbose_name_plural": "Field of Studies",
                "db_table": "samam_field_of_study",
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="gender")),
            ],
            options={
                "verbose_name": "gender",
                "verbose_name_plural": "genders",
                "db_table": "samam_gender",
            },
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Grade",
                "verbose_name_plural": "Grades",
                "db_table": "samam_grade",
            },
        ),
        migrations.CreateModel(
            name="JobLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Job Level",
                "verbose_name_plural": "Job Levels",
                "db_table": "samam_job_level",
            },
        ),
        migrations.CreateModel(
            name="MaritalStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Marital Status",
                "verbose_name_plural": "Marital Status",
                "db_table": "samam_marital_status",
            },
        ),
        migrations.CreateModel(
            name="MilitaryStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Military Status",
                "verbose_name_plural": "Military Statuses",
                "db_table": "samam_military_status",
            },
        ),
        migrations.CreateModel(
            name="Occupation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
            ],
            options={
                "verbose_name": "Occupation",
                "verbose_name_plural": "Occupations",
                "db_table": "samam_occupation",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300, verbose_name="name")),
                ("language", models.CharField(max_length=5, verbose_name="language")),
                (
                    "customer",
                    models.ForeignKey(
                        limit_choices_to={"is_customer": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization",
                "verbose_name_plural": "Organizations",
                "db_table": "samam_organization",
            },
        ),
        migrations.CreateModel(
            name="OrganizationGraph",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "obligate_to_job_description",
                    models.IntegerField(
                        default=0, verbose_name="obligate to job description"
                    ),
                ),
                (
                    "obligate_to_announcement",
                    models.IntegerField(
                        default=0, verbose_name="obligate to announcement"
                    ),
                ),
                ("row_name", models.CharField(max_length=150, verbose_name="row name")),
                (
                    "row_full_name",
                    models.CharField(max_length=150, verbose_name="row full name"),
                ),
                ("number", models.IntegerField(verbose_name="number")),
                (
                    "career_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.careerfield",
                    ),
                ),
                (
                    "career_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.careergroup",
                        verbose_name="career group",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.department",
                    ),
                ),
                (
                    "electronic_announcement_title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.electronicannouncementtitle",
                        verbose_name="electronic announcement title",
                    ),
                ),
                (
                    "occupation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.occupation",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Graph",
                "verbose_name_plural": "Organization Graphs",
                "db_table": "samam_organization_graph",
            },
        ),
        migrations.CreateModel(
            name="OrganizationNickname",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "gender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.gender",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "organization nickname",
                "verbose_name_plural": "organization nicknames",
                "db_table": "samam_organization_nickname",
            },
        ),
        migrations.CreateModel(
            name="Palace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Designates if this object should be considered active or not or to simulate soft delete behaviour.",
                        verbose_name="active",
                    ),
                ),
                ("banner", models.ImageField(blank=True, upload_to="palace/banner")),
                ("logo", models.ImageField(blank=True, upload_to="palace/logo")),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("address", models.CharField(max_length=255, verbose_name="address")),
                (
                    "is_private",
                    models.BooleanField(default=True, verbose_name="is private"),
                ),
                ("land_area", models.IntegerField(null=True, verbose_name="land area")),
                (
                    "noble_area",
                    models.IntegerField(null=True, verbose_name="area of noble"),
                ),
                ("distance_to_province", models.IntegerField(blank=True, null=True)),
                ("distance_to_same_palace", models.IntegerField(blank=True, null=True)),
                ("operation_date", models.DateField(verbose_name="operation date")),
                (
                    "completion_certificate",
                    models.ImageField(
                        blank=True, upload_to="palace/completion_certificate"
                    ),
                ),
                (
                    "completion_date",
                    models.DateField(blank=True, verbose_name="completion date"),
                ),
                (
                    "operation_license",
                    models.ImageField(
                        blank=True,
                        upload_to="palace/operation_license",
                        verbose_name="operation license",
                    ),
                ),
                ("phone", models.CharField(max_length=15, verbose_name="phone")),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="palace email"),
                ),
                (
                    "website",
                    models.URLField(blank=True, max_length=300, verbose_name="website"),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=15, verbose_name="postal code"),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "Palace",
                "verbose_name_plural": "Palaces",
                "db_table": "samam_palace",
            },
        ),
        migrations.CreateModel(
            name="PalaceStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Designates if this object should be considered active or not or to simulate soft delete behaviour.",
                        verbose_name="active",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Palace Status",
                "verbose_name_plural": "Palace Statuses",
                "db_table": "samam_palace_status",
            },
        ),
        migrations.CreateModel(
            name="TeamDistribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Designates if this object should be considered active or not or to simulate soft delete behaviour.",
                        verbose_name="active",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.department",
                        verbose_name="department",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
                (
                    "palace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.palace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Distribution",
                "verbose_name_plural": "Team Distributions",
                "db_table": "samam_palace_team_distribution",
            },
        ),
        migrations.CreateModel(
            name="ResidentialArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="domain.city",
                        verbose_name="city",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Residential Area",
                "verbose_name_plural": "Residential Areas",
                "db_table": "samam_residential_area",
            },
        ),
        migrations.CreateModel(
            name="Religion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Religion",
                "verbose_name_plural": "Religions",
                "db_table": "samam_religion",
            },
        ),
        migrations.CreateModel(
            name="Relation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relations",
                "verbose_name_plural": "Relations",
                "db_table": "samam_relation",
            },
        ),
        migrations.CreateModel(
            name="Province",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="domain.country",
                        verbose_name="country",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Province",
                "verbose_name_plural": "Provinces",
                "db_table": "samam_province",
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "personnel_code",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="personnel code",
                    ),
                ),
                (
                    "picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile",
                        verbose_name="picture",
                    ),
                ),
                ("phone", models.CharField(max_length=15, verbose_name="phone")),
                (
                    "birthdate",
                    models.DateField(blank=True, null=True, verbose_name="birthdate"),
                ),
                (
                    "national_id",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="national id"
                    ),
                ),
                (
                    "identification_id",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="identification id",
                    ),
                ),
                (
                    "essential_phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="essential phone",
                    ),
                ),
                (
                    "Organization_nickname",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organizationnickname",
                    ),
                ),
                (
                    "blood_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.bloodtype",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.city",
                    ),
                ),
                (
                    "degree_compliance",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.degreecompliance",
                    ),
                ),
                (
                    "field_of_study",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.fieldofstudy",
                    ),
                ),
                (
                    "gender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.gender",
                    ),
                ),
                (
                    "grade",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.grade",
                    ),
                ),
                (
                    "marital_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.maritalstatus",
                    ),
                ),
                (
                    "military_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.militarystatus",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.residentialarea",
                    ),
                ),
                (
                    "religion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.religion",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="phone"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="postal code"
                    ),
                ),
                (
                    "start_date",
                    models.DateField(blank=True, null=True, verbose_name="start date"),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="end date"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="email"
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.city",
                    ),
                ),
                (
                    "employment_status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.employmentstatus",
                    ),
                ),
                (
                    "employment_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.employmenttype",
                    ),
                ),
                (
                    "job_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.joblevel",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
                (
                    "organization_graph",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organizationgraph",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.residentialarea",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlaceAccountType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Place Account Type",
                "verbose_name_plural": "Place Account Types",
                "db_table": "samam_place_account_type",
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=250, verbose_name="name")),
                ("is_workplace", models.BooleanField(default=False)),
                ("is_equipment_location", models.BooleanField(default=False)),
                ("is_committee", models.BooleanField(default=False)),
                ("is_team", models.BooleanField(default=False)),
                ("is_management_leadership", models.BooleanField(default=False)),
                (
                    "account_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.placeaccounttype",
                        verbose_name="place account type",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
                (
                    "palace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.palace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Place",
                "verbose_name_plural": "Place",
                "db_table": "samam_place",
            },
        ),
        migrations.CreateModel(
            name="PalaceStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(auto_now_add=True, verbose_name="start at"),
                ),
                ("end", models.DateTimeField(verbose_name="end at")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
                (
                    "palace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.palace",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.palacestatus",
                        verbose_name="palace status history",
                    ),
                ),
            ],
            options={
                "db_table": "samam_palace_status_history",
            },
        ),
        migrations.CreateModel(
            name="PalaceOwnershipType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Palace Ownership type",
                "verbose_name_plural": "Palace Ownership Types",
                "db_table": "samam_palace_ownership_type",
            },
        ),
        migrations.CreateModel(
            name="PalaceLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("is_headquarters_unit", models.BooleanField(default=False)),
                ("is_provincial_unit", models.BooleanField(default=False)),
                ("is_executive_unit", models.BooleanField(default=False)),
                ("is_provider", models.BooleanField(default=False)),
                ("is_top_notch_organization", models.BooleanField(default=False)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Palace Level",
                "verbose_name_plural": "Palace Levels",
                "db_table": "samam_palace_level",
            },
        ),
        migrations.CreateModel(
            name="PalaceKind",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=250, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Palace Kind",
                "verbose_name_plural": "Palace Kinds",
                "db_table": "samam_palace_kind",
            },
        ),
        migrations.CreateModel(
            name="PalaceAccountType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Palace Account Type",
                "verbose_name_plural": "Palace Account Types",
                "db_table": "samam_palace_account_type",
            },
        ),
        migrations.AddField(
            model_name="palace",
            name="account_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.palaceaccounttype",
            ),
        ),
        migrations.AddField(
            model_name="palace",
            name="city",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.city",
                verbose_name="city",
            ),
        ),
        migrations.AddField(
            model_name="palace",
            name="kind",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.palacekind",
                verbose_name="kind",
            ),
        ),
        migrations.AddField(
            model_name="palace",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="palace",
            name="ownership_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.palaceownershiptype",
                verbose_name="ownership type",
            ),
        ),
        migrations.AddField(
            model_name="palace",
            name="palace_level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.palacelevel",
            ),
        ),
        migrations.AddField(
            model_name="palace",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="domain.palace",
                verbose_name="parent",
            ),
        ),
        migrations.AddField(
            model_name="palace",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.palacestatus",
                verbose_name="palace status",
            ),
        ),
        migrations.CreateModel(
            name="OrganizationLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "is_manager",
                    models.BooleanField(default=False, verbose_name="is manager"),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "organization level",
                "verbose_name_plural": "organization levels",
                "db_table": "samam_organization_level",
            },
        ),
        migrations.AddField(
            model_name="organizationgraph",
            name="organization_level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organizationlevel",
                verbose_name="organization level",
            ),
        ),
        migrations.AddField(
            model_name="occupation",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="militarystatus",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="maritalstatus",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.CreateModel(
            name="LanguageCaption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                ("language", models.CharField(max_length=5, verbose_name="language")),
                ("code", models.IntegerField(verbose_name="code")),
                (
                    "is_editable",
                    models.BooleanField(default=False, verbose_name="is editable"),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Language Caption",
                "verbose_name_plural": "Language Captions",
                "db_table": "samam_language_caption",
            },
        ),
        migrations.AddField(
            model_name="joblevel",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="grade",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="gender",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="fieldofstudy",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="employmenttype",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="employmentstatus",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="employmentstatus",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.employmentstate",
            ),
        ),
        migrations.AddField(
            model_name="employmentstate",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="electronicannouncementtitle",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.CreateModel(
            name="DepartmentStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Designates if this object should be considered active or not or to simulate soft delete behaviour.",
                        verbose_name="active",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Department Status",
                "verbose_name_plural": "Department Statuses",
                "db_table": "samam_department_status",
            },
        ),
        migrations.CreateModel(
            name="DepartmentOwnershipType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This is the timestamp of the object creation.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="This is the timestamp of the object update",
                        verbose_name="updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.organization",
                    ),
                ),
                (
                    "palace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="domain.palace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Department Ownership type",
                "verbose_name_plural": "Department Ownership Types",
                "db_table": "samam_department_ownership_type",
            },
        ),
        migrations.AddField(
            model_name="department",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="department",
            name="ownership",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.departmentownershiptype",
                verbose_name="department ownership type",
            ),
        ),
        migrations.AddField(
            model_name="department",
            name="palace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.palace",
            ),
        ),
        migrations.AddField(
            model_name="department",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="domain.department",
                verbose_name="parent",
            ),
        ),
        migrations.AddField(
            model_name="department",
            name="place",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.place",
                verbose_name="place",
            ),
        ),
        migrations.AddField(
            model_name="department",
            name="status",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.departmentstatus",
                verbose_name="department status",
            ),
        ),
        migrations.AddField(
            model_name="degreecompliance",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="country",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="province",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="domain.province",
                verbose_name="province",
            ),
        ),
        migrations.AddField(
            model_name="careergroup",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="careerfield",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="bloodtype",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)ss",
                to="domain.organization",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
